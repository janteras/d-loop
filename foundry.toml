[profile.default]
src = 'contracts'
out = 'out'
libs = ["node_modules", "lib"]
test = 'test/foundry'
cache_path = 'forge-cache'

# Compilation settings
solc_version = '0.8.24'
optimizer = true
optimizer_runs = 200
verbosity = 2

# Testing settings
fuzz = { runs = 1000, max_test_rejects = 65536 }
invariant = { runs = 100, depth = 15, fail_on_revert = false }

# CI/CD pipeline profile - more thorough testing
[profile.ci]
fuzz = { runs = 5000, max_test_rejects = 262144 }
invariant = { runs = 250, depth = 25, fail_on_revert = false }

# Gas optimization profile - focus on gas usage
[profile.gas]
fuzz = { runs = 100, max_test_rejects = 10000 }
invariant = { runs = 10, depth = 5 }
gas_reports = ["*"]
gas_reports_ignore = []

# Coverage profile - for generating test coverage reports
[profile.coverage]
fuzz = { runs = 500, max_test_rejects = 65536 }
invariant = { runs = 50, depth = 10, fail_on_revert = false }

# Quick testing profile - for rapid development cycles
[profile.quick]
fuzz = { runs = 50, max_test_rejects = 10000 }
invariant = { runs = 10, depth = 5, fail_on_revert = true }

# Deep testing profile - for thorough security audits
[profile.deep]
fuzz = { runs = 10000, max_test_rejects = 1000000 }
invariant = { runs = 500, depth = 50, fail_on_revert = false }
bytecode_hash = "none"
optimizer = true
optimizer_runs = 1000000

# Integration testing profile - for testing contract interactions
[profile.integration]
fuzz = { runs = 2000, max_test_rejects = 131072 }
invariant = { runs = 200, depth = 30, fail_on_revert = false }

# Core contracts profile - focused on critical contracts
[profile.core]
fuzz = { runs = 3000, max_test_rejects = 200000 }
invariant = { runs = 300, depth = 40, fail_on_revert = false }
test = 'test/foundry/core'
